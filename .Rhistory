q()
q()
qnorm(0.975)
pnorm(0.975)
pnorm(1.96)
install.packages("rmarkdown")
install.packages("rmarkdown")
libPaths()
.libPaths()
install.packages("rmarkdown")
install.packages("Rtools")
download.packages("Rtools")
install.packages("Rtools")
install.packages("xfun", type="binary")
install.packages("rmarkdown", type="binary")
install.packages("Rtools", type="binary")
install.packages("knitr")
install.packages("knitr")
update.packages("knitr")
install_tinytext()
remove.packages('xfun')
install.packages('xfun')
install.packages("xfun")
install.packages("Rtools")
install.packages("Rtool")
update.packages(checkBuilt =TRUE, ask = FALSE)
remove.packages('xfun')
install.packages("xfun")
install.packages("xfun")
find_rtools(T)
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
remove.packages('xfun')
install.packages('xfun')
install.packages("xfun")
install.packages('xfun')
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
remove.packages('xfun')
install.packages('xfun')
install.packages("xfun")
update.packages(checkBuilt =TRUE, ask = FALSE)
unlink("UPF_Biologia_Humana/4ยบ/1r_Trimestre/Bioinformatica/prueba2_cache", recursive = TRUE)
update.packages(ask = FALSE, repos = 'http://cran.rstudio.org')
install.packages('knitr', repos = c('http://rforge.net', 'http://cran.rstudio.org'),
type = 'source')
install.packages("knitr", repos = c("http://rforge.net", "http://cran.rstudio.org"), type = "source")
remove.packages('xfun')
install.packages('xfun')
install.packages("xfun")
remove.packages('xfun')
packageVersion("xfun")
setwd("~/")
remove.packages('xfun')
install.packages("xfun", type="binary")
install.packages("xfun", type = "binary")
tinytex::install_tinytex()
remove.packages("xfun")
update.packages("knitr")
xfun::normalize_path(path, ..., must_work = FLSE, resolve_symlink = TRUE)
remove.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "bit", "bslib", "cachem", "callr", "cli", "clue", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "fansi", "farver", "fastmap", "fBasics", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "purrr", "ragg", "Rcpp", "readr", "readxl", "rlang", "rmutil", "sass", "stringi", "stringr", "sys", "systemfonts", "textshaping", "tibble", "tidyr", "tidyselect", "timechange", "tzdb", "utf8", "uuid", "vctrs", "vroom", "xfun", "xml2", "yaml"))
install.packages("htmltools")
package_version("htmltools")
package_version("xfun")
packageVersion("htmltools")
packageVersion("xfun")
install.packages("xfun")
install.packages("xfun")
packageVersion("xfun")
install.packages('xfun')
install.packages('xfun', repos = https://rdocumentation.org/packages/xfun/versions/0.40 )
install.packages('xfun', repos = "https://rdocumentation.org/packages/xfun/versions/0.40" )
install.packages("xfun", repos = "https://rdocumentation.org/packages/xfun/versions/0.40")
packageVersion('xfun')
install.packages("xfun")
install.packages("xfun", type = "source")
packageVersion('xfun')
install.packages("htmltools")
install.packages("htmltools")
install.packages("xfun")
install.packages("xfun")
update.packages('knitr')
packageVersion('knitr')
packageVersion('xfun')
update.packages('knitr')
update.packages('xfun')
install.packages('knitr', repos = c('http://rforge.net', 'http://cran.rstudio.org'),
type = 'source')
install.packages("knitr", repos = c("http://rforge.net", "http://cran.rstudio.org"), type = "source")
sessionInfo()
update.packages(ask = FALSE, checkBuilt = TRUE)
update.packages(ask = FALSE, checkBuilt = TRUE)
setwd("C:/Users/34644/Bioinfo_project/Bioinfo")
```{r setup, include=FALSE}
```{r setup, include=FALSE}
```{r setup, include=FALSE}
```{r setup, include=FALSE}
```{r hola, include=FALSE}
library(png)
install.packages(png)
install.packages("png")
```{r hola, include=FALSE}
install.packages("png")
library(png)
img <- readPNG("./aa_MISSMATCH_alignmseq.png")
grid.raster(img)
img2 <- readPNG("./GC_content_Pr4.png")
grid.raster(img2)
grid.arrange(img, img2, ncol=2)
grid.arrange(img, img2, ncol=2)
install.packages("png")
library(png)
install.packages("grid")
library(grid)
grid.arrange(img, img2, ncol=2)
grid.arange(img, img2, ncol=2)
install.packages("gridExtra")
install.packages("gridExtra")
grid.arrrange(aa_MISSMATCH_alignmseq.png, GC_content_Pr4.png, ncol=2)
library(grid)
grid.arrrange(aa_MISSMATCH_alignmseq.png, GC_content_Pr4.png, ncol=2)
library(gridExtra)
grid.arrrange(aa_MISSMATCH_alignmseq.png, GC_content_Pr4.png, ncol=2)
```{r setup, include=FALSE}
grid.arrrange("aa_MISSMATCH_alignmseq.png", "GC_content_Pr4.png", ncol=2)
library(ggplot2)
library(ggplot2)
p1 <- qplot(mpg, wt, data = mtcars, colour = cyl)
p2 <- qplot(mpg, data = mtcars) + ggtitle("title")
p3 <- qplot(mpg, data = mtcars, geom = "dotplot")
p4 <-
p1 + facet_wrap( ~ carb, nrow = 1) + theme(legend.position = "none") +
ggtitle("facetted plot")
plot(p4)
plot(p1)
plot(p2)
plot(p3)
p4 <-
aa_MISSMATCH_alignmseq.png + GC-content_PR4.png
library(ggplot2)
p4 <-
"aa_MISSMATCH_alignmseq.png" + "GC-content_PR4.png"
p1 <- GC_content_Pr4.png
p1 <- "./GC_content_Pr4.png"
p1 <- ./GC_content_Pr4.png
install.package("gridExtra")
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("gridExtra")
grid.arrange()
install.packages("gridExtra")
library(gridExtra)
library(grid)
grid.arrange()
grid.arrange(aa_MISSMATCH_alignmseq.png, GC_content_Pr4.png, ncol=2)
grid.arrange("aa_MISSMATCH_alignmseq.png", "GC_content_Pr4.png", ncol=2)
library(gridExtra)
library(grid)
library(png)
img <- readPNG("./GC_content_Pr4.png")
grid.raster(img)
img2 <- readPNG("./output_bins_Pr4.png")
grid.raster(img2)
grid.arrange("aa_MISSMATCH_alignmseq.png", "GC_content_Pr4.png", ncol=2)
grid.arrange(img, img2, ncol=2)
grid.arrange(img, img2, ncol=2)
{r, echo=FALSE,out.width="49%",out.height="20%",fig.cap="caption",fig.show='hold',fig.align='center'}
![]("completness_contamination_bins_Pr4.png") ![]("GC_content_Pr4.png")
![]("completness_contamination_bins_Pr4.png")![]("GC_content_Pr4.png")
library(png)
library(grid)
library(gridExtra)
img1 <-  rasterGrob(as.raster(readPNG("path/to/picture1.png")), interpolate = FALSE)
library(png)
library(grid)
library(gridExtra)
img1 <-  rasterGrob(as.raster(readPNG("completness_contamination_bins_Pr4.png")), interpolate = FALSE)
img2 <-  rasterGrob(as.raster(readPNG("GC_content_Pr4.png")), interpolate = FALSE)
grid.arrange(img1, img2, ncol = 2)
